diff -rupN a/Makefile b/Makefile
--- a/Makefile	2014-11-14 22:51:53.000000000 +0000
+++ b/Makefile	2017-06-11 07:09:02.454858474 +0000
@@ -1,5 +1,6 @@
 CXX ?= g++
-CFLAGS = -Wall -Wconversion -O3 -fPIC
+CFLAGS = -Wall -Wconversion -O3 -fPIC -fopenmp
+AR = ar
 SHVER = 2
 OS = $(shell uname)
 
@@ -11,7 +12,8 @@ lib: svm.o
 	else \
 		SHARED_LIB_FLAG="-shared -Wl,-soname,libsvm.so.$(SHVER)"; \
 	fi; \
-	$(CXX) $${SHARED_LIB_FLAG} svm.o -o libsvm.so.$(SHVER)
+	$(CXX) $${SHARED_LIB_FLAG} svm.o -o libsvm.so.$(SHVER); \
+	$(AR) rcs libsvm.a svm.o
 
 svm-predict: svm-predict.c svm.o
 	$(CXX) $(CFLAGS) svm-predict.c svm.o -o svm-predict -lm
diff -rupN a/svm.cpp b/svm.cpp
--- a/svm.cpp	2014-11-14 22:52:01.000000000 +0000
+++ b/svm.cpp	2017-06-11 05:05:38.817475989 +0000
@@ -1282,6 +1282,7 @@ public:
 		int start, j;
 		if((start = cache->get_data(i,&data,len)) < len)
 		{
+#pragma omp parallel for private(j) schedule(guided)                    
 			for(j=start;j<len;j++)
 				data[j] = (Qfloat)(y[i]*y[j]*(this->*kernel_function)(i,j));
 		}
@@ -2507,6 +2508,7 @@ double svm_predict_values(const svm_mode
 	{
 		double *sv_coef = model->sv_coef[0];
 		double sum = 0;
+#pragma omp parallel for private(i) reduction(+:sum) schedule(guided)                
 		for(i=0;i<model->l;i++)
 			sum += sv_coef[i] * Kernel::k_function(x,model->SV[i],model->param);
 		sum -= model->rho[0];
@@ -2523,6 +2525,7 @@ double svm_predict_values(const svm_mode
 		int l = model->l;
 		
 		double *kvalue = Malloc(double,l);
+#pragma omp parallel for private(i) schedule(guided)                
 		for(i=0;i<l;i++)
 			kvalue[i] = Kernel::k_function(x,model->SV[i],model->param);
 
